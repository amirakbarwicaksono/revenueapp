package models

import "time"

// DataFmr represents an airline ticket record in the MongoDB dataFmr collection.
type DataFmr struct {
	StationOpenDate  time.Time `bson:"StationOpenDate"`  // Date station opened (DD-MMM-YY, e.g., "2-Apr-25")
	StationCloseDate time.Time `bson:"StationCloseDate"` // Date station closed (DD-MMM-YY, e.g., "3-Apr-25")
	StationNo        int64     `bson:"StationNo"`        // Station number (e.g., 99504053)
	StationCode      string    `bson:"StationCode"`      // Station code (e.g., "KULWB")
	StationCurr      string    `bson:"StationCurr"`      // Station currency (e.g., "MYR")
	StationCurrDec   int       `bson:"StationCurrDec"`   // Currency decimal places (e.g., 2)
	CloseEmpNumber   string    `bson:"CloseEmpNumber"`   // Employee number for closing (e.g., "KUL  GWT")
	TransCode        string    `bson:"TransCode"`        // Transaction code (e.g., "SALE", "EXCH")
	DocType          string    `bson:"DocType"`          // Document type (e.g., "EMD", "TKT")
	TktInd           string    `bson:"TktInd"`           // Ticket indicator (e.g., "E")
	TicketNumber     int64     `bson:"TicketNumber"`     // Ticket number (e.g., 8164403710972)
	PaxName          string    `bson:"PaxName"`          // Passenger name (e.g., "WANG/RUI MS")
	RefundTicket     int64     `bson:"RefundTicket"`     // Refund ticket number (if applicable)
	exchTicket       int64     `bson:"exchTicket"`       // Exchange ticket number (if applicable)
	PreConjTicket    int64     `bson:"PreConjTicket"`    // Preconjunction ticket number (if applicable)
	IssuedDate       time.Time `bson:"IssuedDate"`       // Date ticket issued (DD-MMM-YY, e.g., "2-Apr-25")
	PNRR             string    `bson:"PNRR"`             // Passenger Name Record (e.g., "NMDZXM")
	AgentDie         string    `bson:"AgentDie"`         // Agent code (e.g., "KULGWT")
	TourCode         string    `bson:"TourCode"`         // Tour code (if applicable)
	FOP              string    `bson:"FOP"`              // Form of payment (e.g., "CCVI")
	CCNo             string    `bson:"CCNo"`             // Credit card number, masked (e.g., "411111******1601")
	ApprovalCode     string    `bson:"ApprovalCode"`     // Approval code (e.g., "382168")
	intlcode         string    `bson:"intlcode"`         // International code (e.g., "D", "I")
	Route1           string    `bson:"Route1"`           // First route segment (e.g., "KUL")
	Route2           string    `bson:"Route2"`           // Second route segment (e.g., "AOR")
	Route3           string    `bson:"Route3"`           // Third route segment (if applicable)
	Route4           string    `bson:"Route4"`           // Fourth route segment (if applicable)
	Route5           string    `bson:"Route5"`           // Fifth route segment (if applicable)
	dateofFlight1    time.Time `bson:"dateofFlight1"`    // Flight date for first segment (DD-MMM-YY, e.g., "3-Apr-25")
	dateofFlight2    time.Time `bson:"dateofFlight2"`    // Flight date for second segment (if applicable)
	dateofFlight3    time.Time `bson:"dateofFlight3"`    // Flight date for third segment (if applicable)
	dateofFlight4    time.Time `bson:"dateofFlight4"`    // Flight date for fourth segment (if applicable)
	code1            string    `bson:"code1"`            // Airline code for first segment (e.g., "OD")
	code2            string    `bson:"code2"`            // Airline code for second segment (if applicable)
	code3            string    `bson:"code3"`            // Airline code for third segment (if applicable)
	code4            string    `bson:"code4"`            // Airline code for fourth segment (if applicable)
	EMDRemark1       string    `bson:"EMDRemark1"`       // EMD remark for first segment (e.g., "UPTO22LB 10KG BAGGAGE")
	EMDRemark2       string    `bson:"EMDRemark2"`       // EMD remark for second segment (if applicable)
	EMDRemark3       string    `bson:"EMDRemark3"`       // EMD remark for third segment (if applicable)
	EMDRemark4       string    `bson:"EMDRemark4"`       // EMD remark for fourth segment (if applicable)
	TktBaseFare      float64   `bson:"TktBaseFare"`      // Base ticket fare (e.g., 100.00)
	TktPPN           float64   `bson:"TktPPN"`           // Tax/PPN (e.g., 0.00)
	D8               float64   `bson:"D8"`               // D8 tax (e.g., 8.00)
	T6               float64   `bson:"T6"`               // T6 tax (e.g., 0.00)
	TktFSurcharge    float64   `bson:"TktFSurcharge"`    // Fuel surcharge (e.g., 0.00)
	YR               float64   `bson:"YR"`               // YR tax (e.g., 0.00)
	tktadm           float64   `bson:"tktadm"`           // Admin fee (e.g., 0.00)
	TktApoTax        float64   `bson:"TktApoTax"`        // Airport tax (e.g., 0.00)
	CalcTotal        float64   `bson:"CalcTotal"`        // Total calculated amount (e.g., 108.00)
	exbprasdesc      string    `bson:"exbprasdesc"`      // Extra fare description (if applicable)
	country          string    `bson:"country"`          // Country name (e.g., "MALAYSIA")
}
